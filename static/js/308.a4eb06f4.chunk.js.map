{"version":3,"file":"static/js/308.a4eb06f4.chunk.js","mappings":"gMAAMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAUN,EANwB,SAAAC,GAAS,OAC/BC,MAAM,mDAAD,OACgDD,EADhD,8CAEHL,GACAO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAJgB,E,mCCkDjC,EAvDe,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAE3C,GAAkCC,EAAAA,EAAAA,UAASF,GAA3C,eAAOR,EAAP,KAAkBW,EAAlB,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJhB,GACFiB,EAAgBjB,GACbE,MAAK,SAAAC,GACJU,EAAUV,EAASe,QACpB,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GAEf,GAAE,CAACpB,KAEJgB,EAAAA,EAAAA,YAAU,YACPR,GAASD,EAAgB,CAAC,EAC5B,GAAE,CAACC,EAAOD,IAWX,OACE,4BACE,kBAAMgB,SAXW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,cAAcC,SAASC,MAAMC,MAAMC,OACpDL,IACFf,EAAae,GACbnB,EAAgB,CAAEC,MAAOkB,IAE5B,EAIG,WACE,kBAAOM,KAAK,QAAQC,KAAK,UACzB,mBAAQA,KAAK,SAAb,wBAEF,wBACGrB,GACCA,EAAOsB,KAAI,SAAAC,GAAI,OACb,SAAC,KAAD,CAEEC,GAAE,UAAKD,EAAKE,IACZC,MAAO,CAAEC,KAAMzB,GACf0B,MAAO,CAAEC,QAAS,SAJpB,SAMGN,EAAKO,OALDP,EAAKE,GAFC,QAaxB,C","sources":["components/Api/getMoviesByName.jsx","pages/Movies.jsx"],"sourcesContent":["const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYmM4YTFmYzFjNTJkNDI2MzdiOWY0YzM4Y2YwMTE1ZiIsInN1YiI6IjY0MzczYzAzMWY3NDhiMDA3NzE1NWRjYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xP9IjysvP2DNJPfyp9LiVDmBl5Ma23Yd9KpANBssuVc',\n  },\n};\n\nconst getMoviesByName = queryName =>\n  fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${queryName}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(response => response.json());\n\nexport default getMoviesByName;\n\n\n","import getMoviesByName from 'components/Api/getMoviesByName';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [queryName, setQueryName] = useState(query);\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (queryName) {\n      getMoviesByName(queryName)\n        .then(response => {\n          setMovies(response.results);\n        })\n        .catch(err => console.error(err));\n    }\n  }, [queryName]);\n\n  useEffect(() => {\n    !query && setSearchParams({});\n  }, [query, setSearchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const inputValue = e.currentTarget.elements.input.value.trim();\n    if (inputValue) {\n      setQueryName(inputValue);\n      setSearchParams({ query: inputValue });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input name=\"input\" type=\"text\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies &&\n          movies.map(film => (\n            <Link\n              key={film.id}\n              to={`${film.id}`}\n              state={{ from: location }}\n              style={{ display: 'block' }}\n            >\n              {film.title}\n            </Link>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["options","method","headers","accept","Authorization","queryName","fetch","then","response","json","useSearchParams","searchParams","setSearchParams","query","get","useState","setQueryName","movies","setMovies","location","useLocation","useEffect","getMoviesByName","results","catch","err","console","error","onSubmit","e","preventDefault","inputValue","currentTarget","elements","input","value","trim","name","type","map","film","to","id","state","from","style","display","title"],"sourceRoot":""}